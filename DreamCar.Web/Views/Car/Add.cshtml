
@using DreamCar.Constants.Extensions
@using DreamCar.Web.Controllers

@model DreamCar.Models.Dto.Car.CarWrapper

@{
    ViewBag.Title = "Add Car";
}

@if (Model.Dealers.Any())
{
    <div class="row ">
        
        <div class="col-xs-8 col-sm-offset-2">
            
            <h2>Add</h2>

            @using (Html.BeginForm(nameof(CarController.Add).RemoveControllerSuffix(), nameof(CarController).RemoveControllerSuffix(), FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(x => x.Car.DealerId)
                    <select name="@Html.NameFor(x => x.Car.DealerId)" required="required" class="form-control">
                        <option value="" selected="selected" disabled="disabled"></option>
                        @foreach (var dealer in Model.Dealers)
                        {
                            if (dealer.Id == Model.Car.DealerId)
                            {
                                <option selected="selected" value="@dealer.Id">@dealer.Name</option>
                            }
                            else
                            {
                                <option value="@dealer.Id">@dealer.Name</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.Car.DealerId)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Car.Model)
                    @Html.TextBoxFor(x => x.Car.Model, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Car.Model)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Car.Description)
                    @Html.TextAreaFor(x => x.Car.Description, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Car.Description)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Car.YearBuilt)
                    @Html.TextBoxFor(x => x.Car.YearBuilt, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Car.YearBuilt)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Car.HorsePower)
                    @Html.TextBoxFor(x => x.Car.HorsePower, new {@class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Car.HorsePower)
                </div>


                <input type="submit" class="btn btn-default" value="Add"/>
            }

        </div>

    </div>
}
else
{
    <div class="row">
        <div class="col-xs-8 col-sm-offset-2">
            <br/>
            <h2>There is no a Dealer. Please add dealer first!</h2>
        </div>
    </div>
}



